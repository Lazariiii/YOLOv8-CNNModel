nc: 6 # number of classes
scales: # model compound scaling constants, i.e.
s: [0.33, 0.50, 1024]
backbone:
  # [from, repeats, module, args]
  - [-1, 1, DarkNetLayer, [3, 32, 1, True]]  # 0-P1/2
  - [-1, 1, DarkNetLayer, [32, 64, 1, True]]  # 1-P2/4
  - [-1, 1, DarkNetLayer, [64, 128, 2, True]]  # 2-P3/8
  - [-1, 1, DarkNetLayer, [128, 256, 8, True]]  # 3-P4/16
  - [-1, 1, DarkNetLayer, [256, 512, 8, True]]  # 4-P5/32
  - [-1, 1, DarkNetLayer, [512, 1024, 4, True]]  # 5-P6/64
  - [-1, 1, SPPF, [1024, 5]]  # 6 | output_size: 1024, 20, 20

head:
  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]  # 7  output_size: 1024, 40, 40
  - [-1, 1, Conv, [512, 1, 1]]  # 8 | output_size: 512, 40, 40
  - [[-1, 4], 1, Concat, [1]]  # 9 | cat backbone P4
  - [-1, 3, C2f, [512]]  # 10

  - [-1, 1, nn.Upsample, [None, 2, 'nearest']]  # 11
  - [-1, 1, Conv, [256, 1, 1]]  # 12 | output_size: 256, 80, 80
  - [[-1, 3], 1, Concat, [1]]  # 13 | cat backbone P3
  - [-1, 3, C2f, [256]]  # 14 (P3/8-small)

  - [-1, 1, Conv, [256, 3, 2]]  # 15
  - [[-1, 10], 1, Concat, [1]]  # 16 | cat head P4
  - [-1, 3, C2f, [512]]  # 17 (P4/16-medium)

  - [-1, 1, Conv, [512, 3, 2]]  # 18
  - [[-1, 6], 1, Concat, [1]]  # 19 | cat head P5
  - [-1, 3, C2f, [1024]]  # 20 (P5/32-large)

  - [[14, 17, 20], 1, Detect, [nc]]  # Detect(P3, P4, P5)